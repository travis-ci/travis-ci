Travis.Controllers.Application=Backbone.Controller.extend({routes:{"":"recent","!/:owner/:name/L:line_number":"repository","!/:owner/:name":"repository","!/:owner/:name/builds":"repositoryHistory","!/:owner/:name/builds/:id/L:line_number":"repositoryBuild","!/:owner/:name/builds/:id":"repositoryBuild"},initialize:function(){_.bindAll(this,"recent","byUser","repository","repositoryHistory","repositoryBuild","repositoryShow","repositorySelected","buildQueued","buildStarted","buildLogged","buildFinished","buildRemoved")},run:function(){this.repositories=new Travis.Collections.Repositories,this.builds=new Travis.Collections.AllBuilds,this.jobs=new Travis.Collections.Jobs([],{queue:"builds"}),this.jobsRails=new Travis.Collections.Jobs([],{queue:"rails"}),this.workers=new Travis.Collections.Workers,this.repositoriesList=new Travis.Views.Repositories.List,this.repositoryShow=new Travis.Views.Repository.Show({parent:this}),this.workersView=new Travis.Views.Workers.List,this.jobsView=new Travis.Views.Jobs.List({queue:"builds"}),this.jobsRailsView=new Travis.Views.Jobs.List({queue:"rails"}),$("#left #tab_recent .tab").append(this.repositoriesList.render().el),$("#main").append(this.repositoryShow.render().el),this.repositoriesList.attachTo(this.repositories),this.repositoryShow.attachTo(this.repositories),this.workersView.attachTo(this.workers),this.jobsView.attachTo(this.jobs),this.jobsRailsView.attachTo(this.jobsRails),this.repositories.bind("select",this.repositorySelected),this.bind("build:started",this.buildStarted),this.bind("build:finished",this.buildFinished),this.bind("build:configured",this.buildConfigured),this.bind("build:log",this.buildLogged),this.bind("build:queued",this.buildQueued),this.bind("build:removed",this.buildRemoved),this.workers.fetch(),this.jobs.fetch(),this.jobsRails.fetch()},recent:function(){this.reset(),this.followBuilds=!0,this.selectTab("current"),this.repositories.whenFetched(_.bind(function(){this.repositories.selectLast()},this))},repository:function(a,b,c){console.log("application#repository: ",arguments),this.reset(),this.trackPage(),this.startLoading(),window.params={owner:a,name:b,line_number:c,action:"repository"},this.selectTab("current"),this.repositories.whenFetched(_.bind(function(c){c.selectLastBy({slug:a+"/"+b})},this))},repositoryHistory:function(a,b){console.log("application#repositoryHistory: ",arguments),this.reset(),this.trackPage(),this.selectTab("history"),this.repositories.whenFetched(_.bind(function(c){c.selectLastBy({slug:a+"/"+b})},this))},repositoryBuild:function(a,b,c,d){console.log("application#repositoryBuild: ",arguments),this.reset(),this.trackPage(),this.startLoading(),window.params={owner:a,name:b,build_id:c,line_number:d,action:"repositoryBuild"},this.buildId=parseInt(c),this.selectTab("build"),this.repositories.whenFetched(_.bind(function(c){c.selectLastBy({slug:a+"/"+b})},this))},reset:function(){delete this.buildId,delete this.tab,this.followBuilds=!1,window.params={}},startLoading:function(){$("#main").addClass("loading")},stopLoading:function(){$("#main").removeClass("loading")},trackPage:function(){window._gaq=_gaq||[],window._gaq.push(["_trackPageview"])},repositorySelected:function(a){a.builds.bind("finish_get_or_fetch",function(){this.stopLoading()}.bind(this));switch(this.tab){case"current":a.builds.select(a.get("last_build_id"));break;case"build":a.builds.select(this.buildId);break;case"history":a.builds.fetched||a.builds.fetch()}},buildQueued:function(a){console.log("application#buildQueued: ",arguments),this.addJob(a)},buildStarted:function(a){console.log("application#buildStarted: ",arguments),this.removeJob(a),this.repositories.update(a);if((this.followBuilds||this.tab=="current"&&this.repositories.selected().get("slug")==a.slug)&&!this.buildId&&!a.build.parent_id){var b=this.repositories.get(a.id);b.selected||b.select(),b.builds.select(a.build.id)}},buildConfigured:function(a){console.log("application#buildConfigured: ",arguments),this.removeJob(a),this.repositories.update(a)},buildFinished:function(a){console.log("application#buildFinished: ",arguments),this.repositories.update(a)},buildRemoved:function(a){console.log("application#buildRemoved: ",arguments),this.removeJob(a)},buildLogged:function(a){console.log("application#buildLogged: ",arguments),this.repositories.update(a)},selectTab:function(a){this.tab=a,this.repositoryShow.activateTab(this.tab)},addJob:function(a){this.jobsCollection(a).add({number:a.build.number,id:a.build.id,repository:{slug:a.slug}})},removeJob:function(a){this.jobsCollection(a).remove({id:a.build.id})},jobsCollection:function(a){return this.buildingRails(a)?this.jobsRails:this.jobs},buildingRails:function(a){return a.slug&&a.slug=="rails/rails"}})